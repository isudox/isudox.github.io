<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flask on I sudo X</title>
    <link>https://isudox.com/tags/flask/</link>
    <description>Recent content in Flask on I sudo X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 14 Feb 2017 19:47:11 +0000</lastBuildDate>
    
	<atom:link href="https://isudox.com/tags/flask/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>读 Flask 源码：源码结构</title>
      <link>https://isudox.com/2017/02/14/explore-flask-source-code-structure/</link>
      <pubDate>Tue, 14 Feb 2017 19:47:11 +0000</pubDate>
      
      <guid>https://isudox.com/2017/02/14/explore-flask-source-code-structure/</guid>
      <description>打算对 Flask 的学习做个整理，以 Flask 的 GitHub 代码库的 master 分支为参考。其实早期的 0.3 版还是单文件，整个 flask.py 加上注释也只有 1426 行代码，非常简洁，很适合作为 Python 源码学习</description>
    </item>
    
    <item>
      <title>读 Flask 源码：Context</title>
      <link>https://isudox.com/2016/10/02/flask-context-guide/</link>
      <pubDate>Sun, 02 Oct 2016 20:11:40 +0000</pubDate>
      
      <guid>https://isudox.com/2016/10/02/flask-context-guide/</guid>
      <description>Flask Context 类似 Spring 框架的核心组件 Context，给应用程序提供运行时所需的环境（包含状态、变量等）的快照。如果程序本身就包含了运行所需的完备条件，那</description>
    </item>
    
    <item>
      <title>Gunicorn 驱动工厂模式 Flask 应用</title>
      <link>https://isudox.com/2016/08/29/running-flask-with-gunicorn-in-application-factory/</link>
      <pubDate>Mon, 29 Aug 2016 13:45:50 +0000</pubDate>
      
      <guid>https://isudox.com/2016/08/29/running-flask-with-gunicorn-in-application-factory/</guid>
      <description>之前用 uWsgi 部署过 Django 应用，但当时的开发和部署都还手生，有很多不合理的地方，最近写的一个 Flask 应用，用了另一个 wsgi 容器 —— Gunicorn，并且利用工厂</description>
    </item>
    
  </channel>
</rss>