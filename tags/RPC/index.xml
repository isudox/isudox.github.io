<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RPC on I sudo X</title>
    <link>https://isudox.com/tags/rpc/</link>
    <description>Recent content in RPC on I sudo X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 10 Apr 2017 11:46:23 +0000</lastBuildDate><atom:link href="https://isudox.com/tags/rpc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Thrift 学习笔记：RPC Server 和 Client</title>
      <link>https://isudox.com/2017/04/10/thrift-notes-server-client/</link>
      <pubDate>Mon, 10 Apr 2017 11:46:23 +0000</pubDate>
      
      <guid>https://isudox.com/2017/04/10/thrift-notes-server-client/</guid>
      <description>在了解 Thrift IDL 后，就能开始编写自己的 RPC 服务端和客户端了。对 Thrift 的安装过程和命令操作略过不表，主要还是关注如何利用 Thrift 实现 Java 的 RPC 服务端和客户端。 服务接</description>
    </item>
    
    <item>
      <title>Thrift 学习笔记：IDL</title>
      <link>https://isudox.com/2017/04/06/thrift-learn-notes-idl/</link>
      <pubDate>Thu, 06 Apr 2017 11:08:26 +0000</pubDate>
      
      <guid>https://isudox.com/2017/04/06/thrift-learn-notes-idl/</guid>
      <description>上月底来到了 M 记，氛围和风格都和 J 记有很大不同，很舒服。开发工作还在按照 Mentor 定制的计划学习适应中，部分技术栈之前没接触过，比如 RPC，M 记用的</description>
    </item>
    
    <item>
      <title>通过反射统一 RPC 调用入口</title>
      <link>https://isudox.com/2017/02/06/rpc-uni-entry-with-reflection/</link>
      <pubDate>Mon, 06 Feb 2017 15:18:55 +0000</pubDate>
      
      <guid>https://isudox.com/2017/02/06/rpc-uni-entry-with-reflection/</guid>
      <description>最近项目开发中，有这样一个场景，依赖外部很多服务，每个服务从功能上彼此独立，因此各个外部服务的调用也是相对独立的。因此当时为每个调用都写了一</description>
    </item>
    
  </channel>
</rss>
